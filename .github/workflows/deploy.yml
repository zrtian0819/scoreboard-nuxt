name: Deploy Nuxt.js to GitHub Pages

on:
  push:
    branches:
      - main # 當有新的 commits 推送到 'main' 分支時觸發此 workflow

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # 在最新的 Ubuntu 環境中運行

    steps:
      - name: Checkout repository # 步驟 1: 拉取您的程式碼
        uses: actions/checkout@v4

      - name: Setup Node.js # 步驟 2: 設置 Node.js 環境
        uses: actions/setup-node@v4
        with:
          node-version: '20' # 建議使用 Nuxt3 支援的最新 LTS 版本，例如 '20' 或 '22'
          cache: 'npm' # 啟用 npm 緩存，加快安裝速度

      - name: Install dependencies # 步驟 3: 安裝專案依賴
        run: npm ci # 'npm ci' 比 'npm install' 更適合 CI/CD 環境，它會根據 package-lock.json 安裝精確版本的依賴

      - name: Generate static files # 步驟 4: 構建 Nuxt 專案並生成靜態文件
        run: npm run generate

      - name: Deploy to GitHub Pages # 步驟 5: 部署生成的靜態文件到 gh-pages 分支
        uses: peaceiris/actions-gh-pages@v4 # 使用一個廣泛使用的 GitHub Actions 來部署到 GitHub Pages
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} # GitHub Actions 自動提供的 token
          publish_dir: ./.output/public # Nuxt3 生成靜態文件的目錄
          publish_branch: gh-pages # 指定要部署到的分支名稱
          cname: '' # 如果你有自定義域名，可以在這裡填寫，例如 'your-domain.com'。如果沒有，請保持空白。